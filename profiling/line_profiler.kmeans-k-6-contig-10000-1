Timer unit: 1e-06 s

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/binning/kmeans.py
Function: cluster at line 8
Total time: 213.953 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     8                                           @profile
     9                                           def cluster(contigs, model, cluster_count ,centroids=None, max_iter=100, repeat=10):
    10         2            7      3.5      0.0      (max_clustering_prob,max_centroids,max_clusters) = (-np.inf,None,None)
    11         2            3      1.5      0.0      if repeat != 1:
    12         1            5      5.0      0.0          (max_clustering_prob,max_centroids,max_clusters) = cluster(contigs, model, cluster_count ,centroids=None, max_iter=100, repeat=repeat-1)
    13         2            2      1.0      0.0      if centroids is None:
    14         2     78635835 39317917.5     36.8         centroids = _generate_kplusplus(contigs,model,cluster_count,DNA.kmer_hash_count)
    15         2            4      2.0      0.0      clustering_prob = -np.inf
    16         2            3      1.5      0.0      cluster_different = True
    17                                               
    18        10           31      3.1      0.0      while (cluster_different and max_iter != 0):
    19                                           
    20         8    114419781 14302472.6     53.5          clusters = _expectation(contigs,model,centroids)
    21                                           
    22         8      4856117 607014.6      2.3          centroids = _maximization(contigs, model, clusters, centroids.shape)
    23                                                   
    24         8     16040909 2005113.6      7.5          curr_clustering_prob = _evaluate_clustering(centroids, clusters, model)
    25                                                   
    26         8           41      5.1      0.0          if (curr_clustering_prob <= clustering_prob):
    27         1            1      1.0      0.0              cluster_different = False
    28         1            1      1.0      0.0              if (curr_clustering_prob < clustering_prob):
    29                                                           print>>sys.stderr, "Clustering got worse, previous clustering probability : {0}, current clustering probability: {1}".format( clustering_prob, curr_clustering_prob)
    30         8           23      2.9      0.0          clustering_prob = curr_clustering_prob
    31         8           20      2.5      0.0          max_iter -= 1
    32         8          444     55.5      0.0          print>>sys.stderr,"repeate: {0}, max_iter {1}".format(repeat,max_iter)
    33         2           45     22.5      0.0      (curr_max_clust_prob, curr_max_centr, curr_max_clust) = max([(max_clustering_prob, max_centroids, max_clusters), (clustering_prob, centroids, clusters)],key=lambda x: x[0])
    34         2            7      3.5      0.0      return (curr_max_clust_prob, curr_max_centr, curr_max_clust)

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/binning/kmeans.py
Function: _expectation at line 36
Total time: 114.392 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    36                                           @profile
    37                                           def _expectation(contigs, model, centroids):
    38        64          175      2.7      0.0      clusters = [set() for _ in xrange(len(centroids))]
    39      2400         2429      1.0      0.0      for contig in contigs:
    40     19136    114288541   5972.4     99.9          prob = [model.log_probability(contig.signature,centroid) for centroid in centroids]
    41      2392        94173     39.4      0.1          clust_ind = np.argmax(prob)
    42      2392         6662      2.8      0.0          clusters[clust_ind].add(contig)
    43         8            7      0.9      0.0      return clusters

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/binning/kmeans.py
Function: _maximization at line 45
Total time: 4.8521 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    45                                           @profile    
    46                                           def _maximization(contigs, model, clusters, centroids_shape):
    47         8          147     18.4      0.0      new_centroids = np.zeros(centroids_shape)
    48        64          107      1.7      0.0      for clust_ind ,clust in enumerate(clusters):
    49        56           52      0.9      0.0          if not clust:
    50                                                       select_as_centroid = np.random.randint(0,len(contigs))
    51                                                       new_centroid = model.fit_nonzero_parameters(contigs[select_as_centroid].signature,DNA.kmer_hash_count)
    52                                                   else:
    53        56         1157     20.7      0.0              new_centroid_count = Counter()
    54      2448      4383494   1790.6     90.3              [new_centroid_count.update(contig.signature) for contig in clust]
    55        56       466608   8332.3      9.6              new_centroid = model.fit_nonzero_parameters(new_centroid_count,DNA.kmer_hash_count)
    56        56          533      9.5      0.0          new_centroids[clust_ind,:] = new_centroid
    57         8            7      0.9      0.0      return new_centroids

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/binning/kmeans.py
Function: _generate_centroids at line 59
Total time: 0 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    59                                           @profile
    60                                           def _generate_centroids(c_count,c_dim):
    61                                               centroids = np.random.rand(c_count,c_dim)
    62                                               centroids /= np.sum(centroids,axis=1,keepdims=True)
    63                                               return centroids

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/binning/kmeans.py
Function: _generate_kplusplus at line 65
Total time: 78.6066 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    65                                           @profile
    66                                           def _generate_kplusplus(contigs,model,c_count,c_dim):
    67         2           15      7.5      0.0      contigs_ind = range(len(contigs))
    68         2           30     15.0      0.0      centroids = np.zeros((c_count,c_dim))
    69         2            8      4.0      0.0      contig_ind = np.random.randint(0,len(contigs_ind))
    70         2           13      6.5      0.0      contigs_ind.remove(contig_ind)
    71         2        14099   7049.5      0.0      centroids[0,:] = model.fit_nonzero_parameters(contigs[contig_ind].signature,DNA.kmer_hash_count)
    72        14           22      1.6      0.0      for centroids_index in xrange(1,c_count):
    73        12          120     10.0      0.0          prob = {}
    74      3558         4460      1.3      0.0          for contig_ind in contigs_ind:
    75     15922     78490413   4929.7     99.9              sum_prob = sum([model.log_probability(contigs[contig_ind].signature,centroid) for centroid in centroids[:centroids_index]])
    76      3546        19491      5.5      0.0              prob[np.random.random()*sum_prob] = contig_ind
    77        12          296     24.7      0.0          furthest = min(prob)
    78        12           20      1.7      0.0          contig = contigs[prob[furthest]]
    79        12           53      4.4      0.0          contigs_ind.remove(prob[furthest])
    80        12        77557   6463.1      0.1          centroids[centroids_index,:] = model.fit_nonzero_parameters(contig.signature,DNA.kmer_hash_count)
    81         2            2      1.0      0.0      return centroids

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/binning/kmeans.py
Function: _evaluate_clustering at line 83
Total time: 16.0384 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    83                                           @profile    
    84                                           def _evaluate_clustering(centroids,clusters, model):
    85         8            7      0.9      0.0      cluster_prob = 0
    86        64           97      1.5      0.0      for i,cluster in enumerate(clusters):
    87      2448     16038324   6551.6    100.0          cluster_prob += sum([model.log_probability(contig.signature,centroids[i]) for contig in cluster])
    88         8            8      1.0      0.0      return cluster_prob

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/model/composition/multinomial.py
Function: fit_parameters at line 7
Total time: 0 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def fit_parameters(sig):
     9                                               par = {}
    10                                               n = sum(sig.values())
    11                                               for i,v in sig.items():
    12                                                   par[i] = v/float(n)
    13                                               return par

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/model/composition/multinomial.py
Function: fit_nonzero_parameters at line 14
Total time: 0.376511 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    14                                           @profile
    15                                           def fit_nonzero_parameters(sig,kmer_hash_count):
    16        70         1640     23.4      0.4      pseudo_sig = np.ones(kmer_hash_count)
    17    132382        92388      0.7     24.5      for key,cnt in sig.iteritems():
    18    132312       278399      2.1     73.9          pseudo_sig[key] += cnt
    19        70         4011     57.3      1.1      pseudo_sig /= np.sum(pseudo_sig)
    20        70           73      1.0      0.0      return pseudo_sig

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/model/composition/multinomial.py
Function: log_probability at line 21
Total time: 121.027 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           @profile    
    22                                           def log_probability(signature, prob_vector):
    23                                           
    24                                               #for i,cnt in signature.iteritems():
    25                                               #    log_prod += (log(prob_vector[i])*cnt) - _log_fac(cnt)
    26                                               #return log_prod 
    27                                               
    28     31512      3333693    105.8      2.8      log_prob_vector = log(prob_vector)
    29                                               
    30     31512       139589      4.4      0.1      signature_vector = np.zeros(log_prob_vector.shape)
    31                                               
    32  53558996     40692044      0.8     33.6      for key,value in signature.iteritems():
    33  53527484     44972944      0.8     37.2          signature_vector[key] = value
    34                                           
    35     31512     31889133   1012.0     26.3      return sum(signature_vector*log_prob_vector - _log_fac(signature_vector)) + _log_fac(sum(signature.values()))

File: /home/binni/.local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/model/composition/multinomial.py
Function: _log_fac at line 36
Total time: 4.73185 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    36                                           @profile
    37                                           def _log_fac(i):
    38                                               # gammaln produces the natural logarithm of the factorial of i-1
    39     63024      4731855     75.1    100.0      return gammaln(i+1)

